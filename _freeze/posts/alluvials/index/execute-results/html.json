{
  "hash": "8ec2ed6288ed8c747ee4f8900ebf546a",
  "result": {
    "markdown": "---\ntitle: 'Alluvial Plots'\nauthor: 'Robert W. Walker'\ndate: '2023-02-02'\nimage: 'image.png'\n---\n\n\n\n\n## Alluvial and Sankey Diagrams\n\nThe aforementioned plots are methods for visualising the flow of data through a stream of markers.  I was motivated to show this because enough of you deal in orders, tickets, and the like the flow visualisation of a system might prove of use.  I will work with a familiar dataset.  These are data on Admissions at the University of California Berkeley.  The data exist as an internal R file in tabular form.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggalluvial) # if this is not installed, install.packages(\"ggalluvial\")\ndata(\"UCBAdmissions\") # This dataset is built in as a set of tables.\nUCBAdmissions  # What does it look like?\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n, , Dept = A\n\n          Gender\nAdmit      Male Female\n  Admitted  512     89\n  Rejected  313     19\n\n, , Dept = B\n\n          Gender\nAdmit      Male Female\n  Admitted  353     17\n  Rejected  207      8\n\n, , Dept = C\n\n          Gender\nAdmit      Male Female\n  Admitted  120    202\n  Rejected  205    391\n\n, , Dept = D\n\n          Gender\nAdmit      Male Female\n  Admitted  138    131\n  Rejected  279    244\n\n, , Dept = E\n\n          Gender\nAdmit      Male Female\n  Admitted   53     94\n  Rejected  138    299\n\n, , Dept = F\n\n          Gender\nAdmit      Male Female\n  Admitted   22     24\n  Rejected  351    317\n```\n:::\n\n```{.r .cell-code}\nUCBADF <- data.frame(UCBAdmissions)  # Force it into a data.frame\nUCBADF  # This is what the data structure needs to look like.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Admit Gender Dept Freq\n1  Admitted   Male    A  512\n2  Rejected   Male    A  313\n3  Admitted Female    A   89\n4  Rejected Female    A   19\n5  Admitted   Male    B  353\n6  Rejected   Male    B  207\n7  Admitted Female    B   17\n8  Rejected Female    B    8\n9  Admitted   Male    C  120\n10 Rejected   Male    C  205\n11 Admitted Female    C  202\n12 Rejected Female    C  391\n13 Admitted   Male    D  138\n14 Rejected   Male    D  279\n15 Admitted Female    D  131\n16 Rejected Female    D  244\n17 Admitted   Male    E   53\n18 Rejected   Male    E  138\n19 Admitted Female    E   94\n20 Rejected Female    E  299\n21 Admitted   Male    F   22\n22 Rejected   Male    F  351\n23 Admitted Female    F   24\n24 Rejected Female    F  317\n```\n:::\n:::\n\n\n## An Alluvial\n\nThis is the tidy version that we worked with at the individual level.  To make this code work, change the below locations to import the same data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(url(\"https://github.com/robertwwalker/academic-mymod/raw/master/data/UCBtidy.RData\"))\nhead(DiscriminationUCB)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   M.F Admit Dept\n1 Male   Yes    A\n2 Male   Yes    A\n3 Male   Yes    A\n4 Male   Yes    A\n5 Male   Yes    A\n6 Male   Yes    A\n```\n:::\n:::\n\n\nTo put this data in a table, using the `%>%` pipe operator, we will pass the tidy data, group it by the elements of the alluvial, and then generate the counts.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDUCBT <- DiscriminationUCB %>% group_by(M.F,Dept,Admit) %>% summarise(count = n()) %>% ungroup()\nDUCBT\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 24 × 4\n   M.F    Dept  Admit count\n   <fct>  <fct> <fct> <int>\n 1 Female A     No       19\n 2 Female A     Yes      89\n 3 Female B     No        8\n 4 Female B     Yes      17\n 5 Female C     No      391\n 6 Female C     Yes     202\n 7 Female D     No      244\n 8 Female D     Yes     131\n 9 Female E     No      299\n10 Female E     Yes      94\n# … with 14 more rows\n```\n:::\n:::\n\n\n\n## `ggalluvial()`\n\nThe alluvial requires an additional package `ggalluvial`.  We can install it through \n\n```\ninstall.packages(\"ggalluvial\")\n```\n\nWhat can it do?  It needs data.  The y axis is always the total counts in the cells.  Then we set axes with a number after to show the phases from left to right.  So here, axis1 will be gender and axis two will be Department.  Admitted and non-admitted students `flowed` with colors depicting them move through the system.  We want to track them by their admitted status.  The alluvial itself has y as Frequency and the various axis* as the phases to track.  The outcome of interest enters the fill so that color shows the outcome of interest flowing through the strata.\n\n## With the system data\n\nThis is the vignette solution to these data with the package.  Extending it to any data is a two step process.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nUCBADF %>% ggplot(.,\n       aes(y = Freq, axis1 = Gender, axis2 = Dept)) +\n  geom_alluvium(aes(fill = Admit), width = 1/12) +\n  geom_stratum(width = 1/12, fill = \"black\", color = \"grey\") +\n  geom_label(stat = \"stratum\", label.strata = TRUE) +\n  scale_x_discrete(limits = c(\"Gender\", \"Dept\"), expand = c(.05, .05)) + # Fix the x axis\n  scale_fill_brewer(type = \"qual\", palette = \"Set1\") + # Give it nice colors\n  ggtitle(\"UC Berkeley admissions and rejections, by sex and department\") + # give it a title\n  labs(y=\"Applicants\") + theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n# A simple one [or as simple as I can]\n\nA lot of the code is just prettying.  The most basic plot needs this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(UCBADF,  # plot the data\n       aes(y = Freq, axis1 = Gender, axis2 = Dept)) + # what are the named axes\n  geom_alluvium(aes(fill = Admit), width = 1/12) + # what variable will fill the paths; Admission here.\n  geom_stratum(width = 1/12, fill = \"black\", color = \"grey\") + # This set the strata that our people will move through The one 12 is 12 combinations; the two colors here dfine the background and text for the labels.\n  geom_label(stat = \"stratum\", label.strata = TRUE)  # This labels them.\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nSame with our data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(DUCBT,\n       aes(y = count, axis1 = M.F, axis2 = Dept)) +\n  geom_alluvium(aes(fill = Admit), width = 1/12) +\n  geom_stratum(width = 1/12, fill = \"black\", color = \"grey\") +\n  geom_label(stat = \"stratum\", label.strata = TRUE) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## The Titanic: Multiple Phases\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"Titanic\")\nTitanic\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n, , Age = Child, Survived = No\n\n      Sex\nClass  Male Female\n  1st     0      0\n  2nd     0      0\n  3rd    35     17\n  Crew    0      0\n\n, , Age = Adult, Survived = No\n\n      Sex\nClass  Male Female\n  1st   118      4\n  2nd   154     13\n  3rd   387     89\n  Crew  670      3\n\n, , Age = Child, Survived = Yes\n\n      Sex\nClass  Male Female\n  1st     5      1\n  2nd    11     13\n  3rd    13     14\n  Crew    0      0\n\n, , Age = Adult, Survived = Yes\n\n      Sex\nClass  Male Female\n  1st    57    140\n  2nd    14     80\n  3rd    75     76\n  Crew  192     20\n```\n:::\n\n```{.r .cell-code}\nTDF <- as.data.frame(Titanic)\nTDF\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Class    Sex   Age Survived Freq\n1    1st   Male Child       No    0\n2    2nd   Male Child       No    0\n3    3rd   Male Child       No   35\n4   Crew   Male Child       No    0\n5    1st Female Child       No    0\n6    2nd Female Child       No    0\n7    3rd Female Child       No   17\n8   Crew Female Child       No    0\n9    1st   Male Adult       No  118\n10   2nd   Male Adult       No  154\n11   3rd   Male Adult       No  387\n12  Crew   Male Adult       No  670\n13   1st Female Adult       No    4\n14   2nd Female Adult       No   13\n15   3rd Female Adult       No   89\n16  Crew Female Adult       No    3\n17   1st   Male Child      Yes    5\n18   2nd   Male Child      Yes   11\n19   3rd   Male Child      Yes   13\n20  Crew   Male Child      Yes    0\n21   1st Female Child      Yes    1\n22   2nd Female Child      Yes   13\n23   3rd Female Child      Yes   14\n24  Crew Female Child      Yes    0\n25   1st   Male Adult      Yes   57\n26   2nd   Male Adult      Yes   14\n27   3rd   Male Adult      Yes   75\n28  Crew   Male Adult      Yes  192\n29   1st Female Adult      Yes  140\n30   2nd Female Adult      Yes   80\n31   3rd Female Adult      Yes   76\n32  Crew Female Adult      Yes   20\n```\n:::\n\n```{.r .cell-code}\nggplot(TDF,\n       aes(y = Freq, axis1 = Class, axis2 = Age, axis3 = Sex, axis4=Survived)) +\n  geom_alluvium(aes(fill = Survived), width = 1/24) +\n  geom_stratum(width = 1/12, fill = \"white\", color = \"black\") +\n  geom_label(stat = \"stratum\", label.strata = TRUE) +\n  scale_x_discrete(limits = c(\"Class\", \"Age\", \"Sex\")) + # Fix the x axis\n  scale_fill_brewer(type = \"qual\", palette = \"Set1\") + # Give it nice colors\n  ggtitle(\"The Fate of Titanic Passengers\", subtitle=\"Class, Sex, Age\") # give it a title \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n### Beyonce Palettes\n\nNow for one better, we can combine variables.  I will use the titanic data and combine Age and Sex into a new variable people.  They will now flow through Class to Survival starting with four types of people.  I recently discovered Beyonce palettes; I will use Beyonce 41 for this alluvial.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# devtools::install_github(\"dill/beyonce\")\nlibrary(beyonce)\nTDF2 <- TDF %>% mutate(People = Sex:Age, AgeS = Age:Survived)\nggplot(TDF2,\n       aes(y = Freq, axis1 = People, axis2 = Class, axis3=Survived)) +\n  geom_alluvium(aes(fill = AgeS), width = 1/24) +\n  geom_stratum(width = 1/12, fill = \"white\", color = \"black\") +\n  geom_label(stat = \"stratum\", label.strata = TRUE) +\n  scale_x_discrete(limits = c(\"People\", \"Class\", \"Survived\")) + # Fix the x axis\n  scale_fill_manual(values = beyonce_palette(41)) + # Give it nice colors\n  ggtitle(\"The Fate of Titanic Passengers\", subtitle=\"Class, People\") + # give it a title\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}