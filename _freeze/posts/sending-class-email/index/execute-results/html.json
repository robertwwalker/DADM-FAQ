{
  "hash": "3167acd129374a1ad7fcbc43181d54db",
  "result": {
    "markdown": "---\ntitle: \"Sending Email with R\"\nauthor: \"Robert W. Walker\"\ndate: \"2023-02-28\"\ncategories: [R]\nimage: \"image.png\"\n---\n\n\n\n\n# Sending an Email to the Class\n\nI want to send an email to my class.  \n\n- I could use the LMS.\n- I can use `gmailr`.\n\n## The `gmailr` package\n\nThe key command to get started is authorization.\n\n```\ngmailr::gm_auth\n```\n\nNow I need to set up a function to write the emails.  I have a basic .Rmd template file `CardsMaster3-Sp23.Rmd`\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-1_afefe8230e9b200b920d409d1fb9cbfe'}\n\n```{.r .cell-code}\n# Step 1\nlibrary(tidyverse)\nlibrary(rmarkdown)\nlibrary(purrr)\n# Create a function with three inputs: User.ID, First, and Name\nCardsMaker2 <- function(User.ID, First, Name) {\n  render(\"img/CardsMaster3-Sp23.Rmd\", params = list(User.ID=User.ID, fname=First, name=Name), output_file = paste0(\"cards3/\",User.ID,\".html\", sep=\"\"))\n}\n```\n:::\n\n\nWe have a markdown file.  It looks like this.\n\n![Screen shot of email template file](img/Screenshot 2023-02-28 at 8.17.58 AM.png)\n\nFrom there on in the file is a piece of generative art.  The key to parameterized markdown is the `params`.  There are three here, the first name -- `fname` -- the `name` -- Last, First -- and the `User.ID` to deploy in constructing the email address.  The email will begin with a `to:` line with the full name.  Then a `Hi ` first name.  Then the text of the email including the generative art.\n\nTo make this work, I need a roster.\n\n```\n# Modify this to import the spreadsheet\nEmail.List <- read.csv(\"ClassRoster.csv\")\n```\n\nTake the email list, select the students, and yield a data.frame.\n\n```\n# Select students\nEmail.List.Use <- Email.List %>% \n  filter(Role==\"Student\") %>% \n  mutate(email = Email) \n# Use rowwise and then split up the names into a First name\nEmail.List.Use %<>% \n  rowwise() %>% \n  mutate(Last = unlist(str_split(Name, \",\"))[1], First = unlist(str_split(Name, \",\"))[2]) %>% \n  data.frame()\n```\n\nUse `pmap` to generate the emails.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-2_07bbac578c07180e84e9997bb8bb3c0e'}\n\n```{.r .cell-code}\nEmail.List.Use <- data.frame(First=\"Robert\",Last=\"Walker\", Name=\"Walker, Robert\", email=\"rwalker@willamette.edu\", User.ID=\"rwalker\", fstub=\"rwalker\")\nEmail.List.Use %>% select(Name, User.ID, First) %>% pmap(CardsMaker2)\n```\n:::\n\n\n## Step 2: Send the Emails using `gmailr`\n\nI want a function to create a send the emails.  The inputs need to be an email address, a first name, a last name, and a file stub for the .html email file.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-3_e4e19ebeceee79fde599ba6f9283b375'}\n\n```{.r .cell-code}\nlibrary(gmailr)\nlibrary(tidyverse)\nlibrary(magrittr)\n# use_secret_file(\"~/Client-Secret-RWALKER.json\")\nsend.IPmail.WU <- function(email, firstname, lastname, fstub) {\n  html_msg <-\n    gm_mime() %>%\n    gm_to(paste0(firstname,\" \",lastname,\" <\",email,\">\")) %>%\n    gm_from(\"Robert W. Walker <rwalker@willamette.edu>\") %>%\n    gm_subject(paste0(\"A Mid-Semester Function...\")) %>%\n    gm_html_body(paste0(\"To: \", lastname,\", \",firstname,\", <hr /> <br> \n  Hello \",firstname,\", <br> A wee gift in an .html card.<br> <br>\n                      With my highest regards, <br> Robert W. Walker <br> <br>\")) %>%\n    gm_attach_file(paste0(\"./img/cards3/\",fstub,\".html\", sep=\"\"))\n  gm_send_message(html_msg)\n  return(list(Success=1, email=email, Message = html_msg))\n}\n```\n:::\n\n\n## `map` for sending the emails to each address\n\nMy final step is to use map on the collection of email addresses.  I run through the rows of the dataset and feed it the three values in each iteration.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-4_97945ebcb36ff5f98748609004e56d2f'}\n\n```{.r .cell-code}\ngm_auth_configure(path=\"~/client-secret-RWALKER.json\")\n# A pedestrian use of map.\n1:dim(Email.List.Use)[[1]] %>% \n  map(~ send.IPmail.WU(email=Email.List.Use$email[.x], \n                       firstname=Email.List.Use$First[.x], \n                       lastname=Email.List.Use$Last[.x], \n                       fstub=Email.List.Use$User.ID[.x])\n      )\n```\n:::\n\n![The email](img/Screenshot 2023-02-28 at 11.51.21 AM.png)",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}