{
  "hash": "b614b0b76960043215e67828e68c6f49",
  "result": {
    "markdown": "---\ntitle: Visualizing One Quantitative Variable\nauthor: Robert W. Walker\ndate: '2020-09-13'\nslug: visualize-one-quantity\ncategories:\n  - R\ntags:\n  - plot\nsubtitle: ''\nsummary: ''\nauthors: []\nlastmod: '2020-09-13T20:04:06-07:00'\n---\n\n\n\n\n# Bonds\n\nA dataset for illustrating the various available visualizations needs a certain degree of richness with manageable size.  The dataset on *Bonds* contains three categorical and a few quantitative indicators sufficient to show what we might wish.\n\n## Loading the Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBonds <- read.csv(url(\"https://raw.githubusercontent.com/robertwwalker/DADMStuff/master/BondFunds.csv\"))\n```\n:::\n\n\n## A Summary\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(skimr)\nBonds %>%\n    skim()\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |           |\n|:------------------------|:----------|\n|Name                     |Piped data |\n|Number of rows           |184        |\n|Number of columns        |9          |\n|_______________________  |           |\n|Column type frequency:   |           |\n|character                |4          |\n|numeric                  |5          |\n|________________________ |           |\n|Group variables          |None       |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Fund.Number   |         0|             1|   4|   6|     0|      184|          0|\n|Type          |         0|             1|  20|  23|     0|        2|          0|\n|Fees          |         0|             1|   2|   3|     0|        2|          0|\n|Risk          |         0|             1|   7|  13|     0|        3|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable  | n_missing| complete_rate|   mean|      sd|     p0|    p25|   p50|    p75|     p100|hist  |\n|:--------------|---------:|-------------:|------:|-------:|------:|------:|-----:|------:|--------:|:-----|\n|Assets         |         0|             1| 910.65| 2253.27|  12.40| 113.72| 268.4| 621.95| 18603.50|▇▁▁▁▁ |\n|Expense.Ratio  |         0|             1|   0.71|    0.26|   0.12|   0.53|   0.7|   0.90|     1.94|▂▇▅▁▁ |\n|Return.2009    |         0|             1|   7.16|    6.09|  -8.80|   3.48|   6.4|  10.72|    32.00|▁▇▅▁▁ |\n|X3.Year.Return |         0|             1|   4.66|    2.52| -13.80|   4.05|   5.1|   6.10|     9.40|▁▁▁▅▇ |\n|X5.Year.Return |         0|             1|   3.99|    1.49|  -7.30|   3.60|   4.3|   4.90|     6.80|▁▁▁▅▇ |\n:::\n:::\n\n\nMost data types are represented.  There is no time variable so dates and the visualizations that go with time series are omitted.\n\n# Data Visualization\n\nFirst, let us look at visualizations for one quantitative variable.  Let me focus on assets..\n\n## `geom_histogram()`\n\nA histogram divides the data into categories and counts the observations per category.  The width of the categories [on x] is determined by `binwidth=` or the binwidth can be calculated as a function of the range and the number of bins `bin=`.  I will define it as *Gen.Hist*.\n\n### A Base Histogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGen.Hist <- Bonds %>%\n    ggplot() + aes(x = Assets) + geom_histogram()\nGen.Hist\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n### Histograms [bins]\n\nWe can choose more bins. 50?  That is far more than the default of 30.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBin50.Hist <- Bonds %>%\n    ggplot() + aes(x = Assets) + geom_histogram(bins = 50)\nBin50.Hist\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nWe can also choose fewer bins.  I will choose 10.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBin10.Hist <- Bonds %>%\n    ggplot() + aes(x = Assets) + geom_histogram(bins = 10)\nBin10.Hist\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n### Histograms [binwidth]\n\nWe can also set the width of bins in the metric of `x`; I will choose 500 (bigger).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBinW500.Hist <- Bonds %>%\n    ggplot() + aes(x = Assets) + geom_histogram(binwidth = 500)\nBinW500.Hist\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nWe can also set the width of bins in the metric of `x`; I will choose 50 (smaller width makes more bins).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBinW50.Hist <- Bonds %>%\n    ggplot() + aes(x = Assets) + geom_histogram(binwidth = 50)\nBinW50.Hist\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## `geom_dotplot()`\n\n`geom_dotplot()` places a dot for every observation in the relevant bin.  We can control the size of the bins [in the original metric] with `binwidth=`.\n\n### Small binwidth\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBonds %>%\n    ggplot() + aes(x = Assets) + geom_dotplot(binwidth = 10)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n### Large binwidth\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBonds %>%\n    ggplot() + aes(x = Assets) + geom_dotplot(binwidth = 1000)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n### An ?optimal? binwidth\n\nEach dot represents a datum with bins of size 100.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBonds %>%\n    ggplot() + aes(x = Assets) + geom_dotplot(binwidth = 100) + labs(y = \"\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## `geom_freqpoly()`\n\n`geom_freqpoly()` is the line equivalent of a histogram.  The arguments are similar, the output doesn't include the bars as it does in the histogram.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBonds %>%\n    ggplot(., aes(x = Assets)) + geom_freqpoly()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n### More bins\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBonds %>%\n    ggplot(., aes(x = Assets)) + geom_freqpoly(bins = 50)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n### Fewer bins\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBonds %>%\n    ggplot(., aes(x = Assets)) + geom_freqpoly(bins = 10)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n## `geom_area()`\n\nIs a relative of the histogram with lines connecting the midpoints of the bins and an associated fill from zero.\n\n### Defaults to 30 bins\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBonds %>%\n    ggplot(., aes(x = Assets)) + geom_area(stat = \"bin\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n### Small binwidth with a large number of bins\n\nI will color in the area with magenta and clean up the theme.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBonds %>%\n    ggplot(., aes(x = Assets)) + geom_area(stat = \"bin\", bins = 100, fill = \"magenta\") +\n    theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n## `geom_density()`\n\nA relative of the histogram and the area plots above, the density plot smooths out the blocks of a histogram with a moving window [known as the bandwidth].\n\n\n### `geom_density()` outlines\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBonds %>%\n    ggplot(., aes(x = Assets)) + geom_density(outline.type = \"upper\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n\n```{.r .cell-code}\nBonds %>%\n    ggplot(., aes(x = Assets)) + geom_density(outline.type = \"lower\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-2.png){width=672}\n:::\n\n```{.r .cell-code}\nBonds %>%\n    ggplot(., aes(x = Assets)) + geom_density(outline.type = \"full\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-3.png){width=672}\n:::\n:::\n\n\n\n### `geom_density()` adjust\n\nAdjust applies a numeric correction to the bandwidth.  Numbers greater than 1 make the bandwidth bigger [and the graphic smoother] and numbers less than 1 [but greater than zero] make the bandwidth smaller and the graphic more jagged.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBonds %>%\n    ggplot(., aes(x = Assets)) + geom_density(adjust = 2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n\n```{.r .cell-code}\nBonds %>%\n    ggplot(., aes(x = Assets)) + geom_density(adjust = 1/2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-17-2.png){width=672}\n:::\n:::\n\n\n\n## `geom_boxplot`\n\nA boxplot shows a box of the first and third quartiles and a notch at the median.  The dots above or below denote points outside the hinges.  The hinges [default to 1.5*IQR] show a range of expected data while the individual dots show possible outliers outside the hinges.  To adjust the hinges, the argument `coef=1.5` can be adjusted.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBonds %>%\n    ggplot(., aes(x = Assets)) + geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n## `geom_qq()`\n\nTo compare empirical and theoretical quantiles.  Comparing a distribution to the normal or others is common and this provides the tool for doing so.  The default is a normal.\n\nThe empirical cumulative distribution function arises when we sort a quantitative variable and show the percentiles below said value.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBonds %>%\n    ggplot(aes(sample = Assets)) + geom_qq()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n## `stat_ecdf(geom = )`\n\nWe could do this with most geometries.  I will show a few.\n\n### `stat_ecdf(geom = \"step\")`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBonds %>%\n    ggplot(aes(x = Assets)) + stat_ecdf(geom = \"point\") + stat_ecdf(geom = \"step\",\n    alpha = 0.1) + labs(y = \"ECDF: Proportion less than Assets\") + theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n### `stat_ecdf(geom = \"point\")`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBonds %>%\n    ggplot(aes(x = Assets)) + stat_ecdf(geom = \"point\") + stat_ecdf(geom = \"step\",\n    alpha = 0.1) + labs(y = \"ECDF: Proportion less than Assets\") + theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n### Combining two\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBonds %>%\n    ggplot(aes(x = Assets)) + stat_ecdf(geom = \"point\") + stat_ecdf(geom = \"step\",\n    alpha = 0.1) + labs(y = \"ECDF: Proportion less than Assets\") + theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n### `stat_ecdf(geom = \"line\")`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBonds %>%\n    ggplot(aes(x = Assets)) + stat_ecdf(geom = \"line\") + labs(y = \"ECDF: Proportion less than Assets\") +\n    theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n### `stat_ecdf(geom = \"area\")`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBonds %>%\n    ggplot(aes(x = Assets)) + stat_ecdf(geom = \"area\", alpha = 0.2) + labs(y = \"ECDF: Proportion less than Assets\") +\n    theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}